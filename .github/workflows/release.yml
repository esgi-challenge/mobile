name: Release

on:
  push:
    branches:
      - main

jobs:
  create-new-release:
    name: Create new release with APK
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Get the latest tag
        run: |
          git fetch --tags
          OLD_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag is : ${OLD_TAG}"
          echo "old_tag=${OLD_TAG}" >> $GITHUB_ENV

      - name: Build flutter web app
        run: flutter build apk --release --dart-define APPLICATION_ID=${{ secrets.GMAP_API_KEY }}

      - name: Create new tag
        run: |
          NEW_TAG=v$(TZ=Europe/Paris date +'%d.%m.%Y-%Hh%M')
          echo "Creating new tag : ${NEW_TAG}"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=${NEW_TAG}" >> $GITHUB_ENV

      - name: Create release with new commits
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # retrieving commits should be on it's own step, but I did not succeed to store the multi line content inside env variables :
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
          echo -e "List of new features :\n" > commits.txt
          git log ${{ env.old_tag }}..HEAD --pretty=format:"commit [%h](https://github.com/esgi-challenge/mobile/commit/%H) - %s" >> commits.txt

          gh release create ${{ env.new_tag }} \
            build/app/outputs/flutter-apk/app-release.apk \
            --title "Release ${{ env.new_tag }}" \
            --notes-file commits.txt
